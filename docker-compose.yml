version: '3.8'

services:
  postgres:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: ecommerce
    ports:
      - '5432:5432'
    volumes:
    - ./apps/inventory-service/init.sql:/docker-entrypoint-initdb.d/init.sql
    - ./apps/inventory-service/seed.sql:/docker-entrypoint-initdb.d/seed.sql


  redis:
    image: redis:7
    ports:
      - '6379:6379'

  zookeeper:
    image: bitnami/zookeeper:3.9
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: "yes"

  kafka:
    image: bitnami/kafka:3.6
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_CFG_BROKER_ID: 1
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_KRAFT_MODE: "false"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    depends_on:
      - zookeeper

  inventory-service:
    build: ./apps/inventory-service
    ports:
      - "3000:3000"
    environment:
      - POSTGRES_URL=postgresql://user:pass@postgres:5432/ecommerce
      - REDIS_URL=redis://redis:6379
    depends_on:
      - postgres
      - redis

  order-service:
    build: ./apps/order-service
    ports:
      - "3001:3001"
    environment:
      - KAFKA_BROKER=kafka:9092
    depends_on:
      - kafka

  event-consumer:
    build: ./apps/event-consumer
    environment:
      - KAFKA_BROKER=kafka:9092
      - POSTGRES_URL=postgresql://user:pass@postgres:5432/ecommerce
    depends_on:
      - kafka
      - postgres

  auth-service:
    build: ./apps/auth-service
    container_name: auth-service
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - JWT_SECRET=supersecret